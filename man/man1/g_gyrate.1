.TH g_gyrate 1 "Mon 29 Aug 2005"
.SH NAME
g_gyrate
.B VERSION 3.3_beta_20050823
.SH SYNOPSIS
\f3g_gyrate\fP
.BI "-f" " traj.xtc "
.BI "-s" " topol.tpr "
.BI "-n" " index.ndx "
.BI "-o" " gyrate.xvg "
.BI "-acf" " moi-acf.xvg "
.BI "-[no]h" ""
.BI "-nice" " int "
.BI "-b" " time "
.BI "-e" " time "
.BI "-dt" " time "
.BI "-[no]w" ""
.BI "-[no]xvgr" ""
.BI "-nmol" " int "
.BI "-[no]q" ""
.BI "-[no]p" ""
.BI "-[no]moi" ""
.BI "-acflen" " int "
.BI "-[no]normalize" ""
.BI "-P" " enum "
.BI "-fitfn" " enum "
.BI "-ncskip" " int "
.BI "-beginfit" " real "
.BI "-endfit" " real "
.SH DESCRIPTION
g_gyrate computes the radius of gyration of a group of atoms
and the radii of gyration about the x, y and z axes,
as a function of time. The atoms are explicitly mass weighted.
With the 
.B -nmol
option the radius of gyration will be calculated
for multiple molecules by splitting the analysis group in equally
sized parts.
.SH FILES
.BI "-f" " traj.xtc" 
.B Input
 Generic trajectory: xtc trr trj gro g96 pdb 

.BI "-s" " topol.tpr" 
.B Input
 Structure+mass(db): tpr tpb tpa gro g96 pdb xml 

.BI "-n" " index.ndx" 
.B Input, Opt.
 Index file 

.BI "-o" " gyrate.xvg" 
.B Output
 xvgr/xmgr file 

.BI "-acf" " moi-acf.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.SH OTHER OPTIONS
.BI "-[no]h"  "    no"
 Print help info and quit

.BI "-nice"  " int" " 19" 
 Set the nicelevel

.BI "-b"  " time" "      0" 
 First frame (ps) to read from trajectory

.BI "-e"  " time" "      0" 
 Last frame (ps) to read from trajectory

.BI "-dt"  " time" "      0" 
 Only use frame when t MOD dt = first time (ps)

.BI "-[no]w"  "    no"
 View output xvg, xpm, eps and pdb files

.BI "-[no]xvgr"  "   yes"
 Add specific codes (legends etc.) in the output xvg files for the xmgrace program

.BI "-nmol"  " int" " 1" 
 The number of molecules to analyze

.BI "-[no]q"  "    no"
 Use absolute value of the charge of an atom as weighting factor instead of mass

.BI "-[no]p"  "    no"
 Calculate the radii of gyration about the principal axes.

.BI "-[no]moi"  "    no"
 Calculate the moments of inertia (defined by  the principal axes).

.BI "-acflen"  " int" " -1" 
 Length of the ACF, default is half the number of frames

.BI "-[no]normalize"  "   yes"
 Normalize ACF

.BI "-P"  " enum" " 0" 
 Order of Legendre polynomial for ACF (0 indicates none): 
.B 0
, 
.B 1
, 
.B 2
or 
.B 3


.BI "-fitfn"  " enum" " none" 
 Fit function: 
.B none
, 
.B exp
, 
.B aexp
, 
.B exp_exp
, 
.B vac
, 
.B exp5
, 
.B exp7
or 
.B exp9


.BI "-ncskip"  " int" " 0" 
 Skip N points in the output file of correlation functions

.BI "-beginfit"  " real" "      0" 
 Time where to begin the exponential fit of the correlation function

.BI "-endfit"  " real" "     -1" 
 Time where to end the exponential fit of the correlation function, -1 is till the end

