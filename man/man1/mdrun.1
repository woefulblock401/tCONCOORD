.TH mdrun 1 "Mon 29 Aug 2005"
.SH NAME
mdrun
.B VERSION 3.3_beta_20050823
.SH SYNOPSIS
\f3mdrun\fP
.BI "-s" " topol.tpr "
.BI "-o" " traj.trr "
.BI "-x" " traj.xtc "
.BI "-c" " confout.gro "
.BI "-e" " ener.edr "
.BI "-g" " md.log "
.BI "-dgdl" " dgdl.xvg "
.BI "-field" " field.xvg "
.BI "-table" " table.xvg "
.BI "-tablep" " tablep.xvg "
.BI "-rerun" " rerun.xtc "
.BI "-tpi" " tpi.xvg "
.BI "-ei" " sam.edi "
.BI "-eo" " sam.edo "
.BI "-j" " wham.gct "
.BI "-jo" " bam.gct "
.BI "-ffout" " gct.xvg "
.BI "-devout" " deviatie.xvg "
.BI "-runav" " runaver.xvg "
.BI "-pi" " pull.ppa "
.BI "-po" " pullout.ppa "
.BI "-pd" " pull.pdo "
.BI "-pn" " pull.ndx "
.BI "-mtx" " nm.mtx "
.BI "-dn" " dipole.ndx "
.BI "-[no]h" ""
.BI "-nice" " int "
.BI "-deffnm" " string "
.BI "-[no]xvgr" ""
.BI "-np" " int "
.BI "-nt" " int "
.BI "-[no]v" ""
.BI "-[no]compact" ""
.BI "-[no]sepdvdl" ""
.BI "-[no]multi" ""
.BI "-replex" " int "
.BI "-reseed" " int "
.BI "-[no]glas" ""
.BI "-[no]ionize" ""
.SH DESCRIPTION
The mdrun program is the main computational chemistry engine
within GROMACS. Obviously, it performs Molecular Dynamics simulations,
but it can also perform Brownian Dynamics and Langevin Dynamics
as well as Conjugate Gradient or Steepest Descents energy minimization.
Normal mode analysis is another option. In this case mdrun
builds a Hessian matrix from single conformation.
For usual Normal Modes-like calculations, make sure that
the structure provided is properly energy-minimised.
The generated matrix can be diagonalized by g_nmeig.

The mdrun program reads the run input file (
.B -s
) and distributes the
topology over nodes if needed. The coordinates are passed
around, so that computations can begin.
First a neighborlist is made, then the forces are computed.
The forces are globally summed, and the velocities and
positions are updated. If necessary shake is performed to constrain
bond lengths and/or bond angles.
Temperature and Pressure can be controlled using weak coupling to a
bath.


mdrun produces at least three output file, plus one log file
(
.B -g
) per node.
The trajectory file (
.B -o
), contains coordinates, velocities and
optionally forces.
The structure file (
.B -c
) contains the coordinates and
velocities of the last step.
The energy file (
.B -e
) contains energies, the temperature,
pressure, etc, a lot of these things are also printed in the log file
of node 0.
Optionally coordinates can be written to a compressed trajectory file
(
.B -x
).


When running in parallel with PVM or an old version of MPI the

.B -np
option must be given to indicate the number of
nodes.


The option 
.B -dgdl
is only used when free energy perturbation is
turned on.


With 
.B -rerun
an input trajectory can be given for which 
forces and energies will be (re)calculated. Neighbor searching will be
performed for every frame, unless 
.B nstlist
is zero
(see the 
.B .mdp
file).


ED (essential dynamics) sampling is switched on by using the 
.B -ei

flag followed by an 
.B .edi
file.
The 
.B .edi
file can be produced using options in the essdyn
menu of the WHAT IF program. mdrun produces a 
.B .edo
file that
contains projections of positions, velocities and forces onto selected
eigenvectors.


When user-defined potential functions have been selected in the

.B .mdp
file the 
.B -table
option is used to pass mdrun
a formatted table with potential functions. The file is read from
either the current directory or from the GMXLIB directory.
A number of preformatted tables are presented in the GMXLIB dir,
for 6-8, 6-9, 6-10, 6-11, 6-12 Lennard Jones potentials with
normal Coulomb.
When pair interactions are present a seperate table for pair interaction
functions is read using the 
.B -tablep
option.


The options 
.B -pi
, 
.B -po
, 
.B -pd
, 
.B -pn
are used
for potential of mean force calculations and umbrella sampling.
See manual.


With 
.B -multi
multiple systems are simulated in parallel.
As many (single node) input files are required as the number of nodes.
The node number is appended to the run input and each output filename,
for instance topol.tpr becomes topol0.tpr, topol1.tpr etc.
The main use of this option is for NMR refinement: when distance
or orientation restraints are present these can be ensemble averaged
over all the systems.


With 
.B -replex
replica exchange is attempted every given number
of steps. This option implies 
.B -multi
, see above.
All run input files should use a different coupling temperature,
the order of the files is not important. The random seed is set with

.B -reseed
. The velocities are scaled and neighbor searching
is performed after every exchange.


Finally some experimental algorithms can be tested when the
appropriate options have been given. Currently under
investigation are: polarizibility, glass simulations
and X-Ray bombardments.


When mdrun receives a TERM signal, it will set nsteps to the current
step plus one. When mdrun receives a USR1 signal, it will set nsteps
to the next multiple of nstxout after the current step.
In both cases all the usual output will be written to file.
When running with MPI, a signal to one of the mdrun processes
is sufficient, this signal should not be sent to mpirun or
the mdrun process that is the parent of the others.
.SH FILES
.BI "-s" " topol.tpr" 
.B Input
 Generic run input: tpr tpb tpa xml 

.BI "-o" " traj.trr" 
.B Output
 Full precision trajectory: trr trj 

.BI "-x" " traj.xtc" 
.B Output, Opt.
 Compressed trajectory (portable xdr format) 

.BI "-c" " confout.gro" 
.B Output
 Generic structure: gro g96 pdb xml 

.BI "-e" " ener.edr" 
.B Output
 Generic energy: edr ene 

.BI "-g" " md.log" 
.B Output
 Log file 

.BI "-dgdl" " dgdl.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "-field" " field.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "-table" " table.xvg" 
.B Input, Opt.
 xvgr/xmgr file 

.BI "-tablep" " tablep.xvg" 
.B Input, Opt.
 xvgr/xmgr file 

.BI "-rerun" " rerun.xtc" 
.B Input, Opt.
 Generic trajectory: xtc trr trj gro g96 pdb 

.BI "-tpi" " tpi.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "-ei" " sam.edi" 
.B Input, Opt.
 ED sampling input 

.BI "-eo" " sam.edo" 
.B Output, Opt.
 ED sampling output 

.BI "-j" " wham.gct" 
.B Input, Opt.
 General coupling stuff 

.BI "-jo" " bam.gct" 
.B Output, Opt.
 General coupling stuff 

.BI "-ffout" " gct.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "-devout" " deviatie.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "-runav" " runaver.xvg" 
.B Output, Opt.
 xvgr/xmgr file 

.BI "-pi" " pull.ppa" 
.B Input, Opt.
 Pull parameters 

.BI "-po" " pullout.ppa" 
.B Output, Opt.
 Pull parameters 

.BI "-pd" " pull.pdo" 
.B Output, Opt.
 Pull data output 

.BI "-pn" " pull.ndx" 
.B Input, Opt.
 Index file 

.BI "-mtx" " nm.mtx" 
.B Output, Opt.
 Hessian matrix 

.BI "-dn" " dipole.ndx" 
.B Output, Opt.
 Index file 

.SH OTHER OPTIONS
.BI "-[no]h"  "    no"
 Print help info and quit

.BI "-nice"  " int" " 19" 
 Set the nicelevel

.BI "-deffnm"  " string" " " 
 Set the default filename for all file options

.BI "-[no]xvgr"  "   yes"
 Add specific codes (legends etc.) in the output xvg files for the xmgrace program

.BI "-np"  " int" " 1" 
 Number of nodes, must be the same as used for grompp

.BI "-nt"  " int" " 1" 
 Number of threads to start on each node

.BI "-[no]v"  "    no"
 Be loud and noisy

.BI "-[no]compact"  "   yes"
 Write a compact log file

.BI "-[no]sepdvdl"  "    no"
 Write separate V and dVdl terms for each interaction type and node to the log file(s)

.BI "-[no]multi"  "    no"
 Do multiple simulations in parallel (only with -np  1)

.BI "-replex"  " int" " 0" 
 Attempt replica exchange every  steps

.BI "-reseed"  " int" " -1" 
 Seed for replica exchange, -1 is generate a seed

.BI "-[no]glas"  "    no"
 Do glass simulation with special long range corrections

.BI "-[no]ionize"  "    no"
 Do a simulation including the effect of an X-Ray bombardment on your system

